// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// Locator is an autogenerated mock type for the Locator type
type Locator struct {
	mock.Mock
}

// Locate provides a mock function with given fields: ipAddress
func (_m *Locator) Locate(ipAddress string) (float64, float64, error) {
	ret := _m.Called(ipAddress)

	var r0 float64
	if rf, ok := ret.Get(0).(func(string) float64); ok {
		r0 = rf(ipAddress)
	} else {
		r0 = ret.Get(0).(float64)
	}

	var r1 float64
	if rf, ok := ret.Get(1).(func(string) float64); ok {
		r1 = rf(ipAddress)
	} else {
		r1 = ret.Get(1).(float64)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(ipAddress)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewLocator creates a new instance of Locator. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewLocator(t testing.TB) *Locator {
	mock := &Locator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
